name: Build macOS DMG

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-macos-dmg:
    runs-on: macos-latest

    env:
      JAVA_VERSION: '24'
      JAVAFX_VERSION: '24.0.2'
      MAIN_CLASS: 'Project02.AnatomyViewer'
      MAIN_JAR: 'Assignments-1.0-SNAPSHOT.jar'
      APP_NAME: 'AnatomyViewer'
      RUNTIME_DIR: ${{ github.workspace }}/anatomyviewer-build/custom-runtime
      RELEASE_DIR: ${{ github.workspace }}/release/macOS
      ICON_PATH: ${{ github.workspace }}/src/main/resources/anatomy_icon.icns

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Download JavaFX JMODS
        run: |
          curl -L -o javafx-jmods.zip https://download2.gluonhq.com/openjfx/${{ env.JAVAFX_VERSION }}/openjfx-${{ env.JAVAFX_VERSION }}_osx-x64_bin-jmods.zip
          unzip javafx-jmods.zip
          mv openjfx-${{ env.JAVAFX_VERSION }}_osx-x64_bin-jmods javafx-jmods

      - name: Create custom runtime with jlink
        run: |
          $JAVA_HOME/bin/jlink \
            --module-path "$JAVA_HOME/jmods:./javafx-jmods" \
            --add-modules java.base,javafx.controls,javafx.fxml,javafx.graphics,javafx.web \
            --output ${{ env.RUNTIME_DIR }} \
            --strip-debug --compress=2 --no-header-files --no-man-pages

      - name: Package with jpackage
        run: |
          mkdir -p ${{ env.RELEASE_DIR }}
          $JAVA_HOME/bin/jpackage \
            --type dmg \
            --name ${{ env.APP_NAME }} \
            --input target \
            --main-jar ${{ env.MAIN_JAR }} \
            --main-class ${{ env.MAIN_CLASS }} \
            --dest ${{ env.RELEASE_DIR }} \
            --vendor "Mohamed Elsherif" \
            --app-version 1.0 \
            --icon ${{ env.ICON_PATH }} \
            --mac-package-identifier com.example.anatomyviewer \
            --mac-package-name ${{ env.APP_NAME }} \
            --runtime-image ${{ env.RUNTIME_DIR }} \
            --java-options "--enable-native-access=javafx.graphics -Dprism.verbose=true" \
            --verbose

      - name: Upload .dmg artifact
        uses: actions/upload-artifact@v4
        with:
          name: AnatomyViewer-dmg
          path: ${{ env.RELEASE_DIR }}/*.dmg
